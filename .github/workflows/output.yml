---
name: Output Testing

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  spin_up:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set color
        id: random-color-generator
        run: echo "SELECTED_COLOR=green" >> $GITHUB_OUTPUT
      - name: Get color
        # yamllint disable rule:line-length
        run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"
        # yamllint enable rule:line-lengthprework
      - name: Set matrix
        id: discover-test-cases
        # yamllint disable rule:line-length
        run: |
          # get a list of all the test-*/ directories in the test directory
          # use sed to remove the (trailing) '/'
          # use jq-fu to convert the list into a json array, and then into a json string
          matches=$((cd terraform-test && /bin/ls -1d */) |sed 's!/!!' |jq -M -R -s -c 'split("\n")[:-1] |@json')
          # push into our step output
          echo "DISCOVERED_TESTS='${matches}'" >> $GITHUB_OUTPUT
        # yamllint enable rule:line-length
      - name: Get Tests
        # yamllint disable rule:line-length
        run: echo "The discovered tests are ${{ steps.discover-test-cases.outputs.DISCOVERED_TESTS }}"
        # yamllint enable rule:line-lengthprework
      - name: Summary
        run: |
          echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "This is a summary of the step" >> $GITHUB_STEP_SUMMARY
          echo '```txt' >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.discover-test-cases.outputs.DISCOVERED_TESTS }} >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```txt' >> $GITHUB_STEP_SUMMARY
          echo ${{ fromJson(steps.discover-test-cases.outputs.DISCOVERED_TESTS) }} >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

    outputs:
      DISCOVERED: ${{ steps.discover-test-cases.outputs.DISCOVERED_TESTS }}
      SELECTED_COLOR: ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}

  something_colorful:
    runs-on: ubuntu-latest
    needs: spin_up
    steps:
      - name: Get color
        # yamllint disable rule:line-length
        run: echo "The selected color is ${{ needs.spin_up.outputs.SELECTED_COLOR }}" >> $GITHUB_STEP_SUMMARY
        # yamllint enable rule:line-length

  share_discoveries:
    runs-on: ubuntu-latest
    needs: spin_up
    steps:
      - name: Get Tests
        # yamllint disable rule:line-length
        run: echo "The discovered tests are ${{ needs.spin_up.outputs.DISCOVERED }}"
        # yamllint enable rule:line-length
      - name: Summary
        run: |
          echo "This is a summary of the step" >> $GITHUB_STEP_SUMMARY
          echo '```txt' >> $GITHUB_STEP_SUMMARY
          echo ${{ needs.spin_up.outputs.DISCOVERED }} >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  something_testy:
    runs-on: ubuntu-latest
    needs: spin_up
    strategy:
      matrix:
        # yamllint disable-line rule:line-length
        test-directory: ${{ fromJson(needs.spin_up.outputs.DISCOVERED) }}
        ## test-directory: [test-1, test-2, test-3]
    steps:
      - name: Debug
        # yamllint disable rule:line-length
        run: |
          echo "you are in ${{ matrix.test-directory }}"
        # yamllint enable rule:line-length

  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        # yamllint disable rule:line-length
        run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
        # yamllint enable rule:line-length
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.job1.outputs.matrix)}}
    steps:
      - run: |
          echo ${{ matrix.project }} ${{ matrix.config }} >>$GITHUB_STEP_SUMMARY
